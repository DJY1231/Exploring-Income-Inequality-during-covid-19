LLM: ChatGPT-4.
Date: 2 December 2024

User
Write me a R code that displays the first 40 rows of Income Share by social class over time: 2002 to 2023 in Canada. I need it in a chart.
ChatGPT

Generated by DALL·E
```{r}
# Load the necessary library
library(knitr)

# Load the data from CSV
data <- read.csv("Income_inequality_social_class.csv")

# Extracting the first ten rows for the table
data_subset <- head(data, 40)

# Use kable to create a nicely formatted table in Markdown
kable(data_subset, caption = "First 40 rows of Income Share by Social Class Over Time: 2002 to 2023 in Canada.", format = "markdown")
```

User
Write me a R code that displays the graph of Income Share by social class over time: 2002 to 2023 in Canada. 
ChatGPT

Generated by DALL·E
```{r results='hide', message=FALSE, warning=FALSE}
library(ggplot2)

# Load the data
data <- read.csv("Income_inequality_social_class.csv")

# Rename the 'Unnamed: 3' column to 'Income Share'
colnames(data)[4] <- "Income Share"

# Plotting the data
ggplot(data, aes(x = Year, y = `Income Share`, color = Social_Class, group = Social_Class)) +
  geom_line() +
  facet_wrap(~Country, scales = 'free_y') +
  labs(title = "Income Share by Social Class Over Time",
       x = "Year",
       y = "Income Share (%)",
       color = "Social Class") +
  theme_minimal()
```

User
This time write me a R code that displays the graph of Income Share by social class during the Great Recession: 2007 to 2009 in Canada. 
ChatGPT

Generated by DALL·E
```{r results='hide', message=FALSE, warning=FALSE}
library(ggplot2)
library(dplyr)
library(zoo) # For moving averages

# Load the data
data <- read.csv("Income_inequality_social_class.csv")

# Rename the 'Unnamed: 3' column to 'Income Share'
colnames(data)[4] <- "Income Share"

# Convert Year column to integer to remove .0
data$Year <- as.integer(as.numeric(data$Year))

# Filter the data for years 2007 to 2009
filtered_data <- data %>%
  filter(Year >= 2007 & Year <= 2009)

# Add a moving average column for trends
filtered_data <- filtered_data %>%
  group_by(Country, Social_Class) %>%
  mutate(Moving_Avg = rollmean(`Income Share`, k = 3, fill = NA))

# Plot with smoothed lines, moving averages, and facets
ggplot(filtered_data, aes(x = Year, y = `Income Share`, color = Social_Class, group = Social_Class)) +
  geom_point(size = 2) + # Add points for individual data
  geom_smooth(method = "loess", se = FALSE, linetype = "dashed", alpha = 0.8) + # Smoothed lines for trends
  geom_line(aes(y = Moving_Avg), size = 1.2, linetype = "solid") + # Moving average line
  facet_wrap(~Country + Social_Class, scales = 'free_y') + # Facet by Country and Social Class
  scale_x_continuous(breaks = unique(filtered_data$Year), labels = as.character(unique(filtered_data$Year))) +
  labs(title = "Income Share during the Great recession (2007-2009)",
       x = "Year",
       y = "Income Share (%)",
       color = "Social Class") +
  theme_minimal(base_size = 12) +
  theme(legend.position = "bottom", # Adjust legend position
        strip.text = element_text(size = 10, face = "bold")) # Style facet labels

```

User
This time write me a R code that displays the graph of Income Share by social class during the COVID-19: 2020 to 2023 in Canada. 
ChatGPT

Generated by DALL·E
```{r, warning=FALSE, message=FALSE}
library(ggplot2)
library(dplyr)
library(zoo) # For moving averages

# Load the data
data <- read.csv("Income_inequality_social_class.csv")

# Rename the 'Unnamed: 3' column to 'Income Share'
colnames(data)[4] <- "Income Share"

# Convert Year column to integer to remove .0
data$Year <- as.integer(as.numeric(data$Year))

# Filter the data for years 2020 to 2023
filtered_data <- data %>%
  filter(Year >= 2020 & Year <= 2023)

# Add a moving average column for trends
filtered_data <- filtered_data %>%
  group_by(Country, Social_Class) %>%
  mutate(Moving_Avg = rollmean(`Income Share`, k = 3, fill = NA))

# Plot with smoothed lines, moving averages, and facets
ggplot(filtered_data, aes(x = Year, y = `Income Share`, color = Social_Class, group = Social_Class)) +
  geom_point(size = 2) + # Add points for individual data
  geom_smooth(method = "loess", se = FALSE, linetype = "dashed", alpha = 0.8, span = 0.75) + # Smoothed lines with adjusted span
  geom_line(aes(y = Moving_Avg), size = 1.2, linetype = "solid") + # Moving average line
  facet_wrap(~Country + Social_Class, scales = 'free_y') + # Facet by Country and Social Class
  scale_x_continuous(breaks = unique(filtered_data$Year), labels = as.character(unique(filtered_data$Year))) +
  labs(title = "Income Share during Covid-19 (2020-2023)",
       x = "Year",
       y = "Income Share (%)",
       color = "Social Class") +
  theme_minimal(base_size = 12) +
  theme(legend.position = "bottom", # Adjust legend position
        strip.text = element_text(size = 10, face = "bold")) # Style facet labels
```

User
This is the cpi of Canada from the year of 2002 to 2023. I want you to write me R studio code that displays the trend of CPI in a chart.
ChatGPT

Generated by DALL·E
```{r}
# Load necessary libraries
library(ggplot2)

# Load the data
cpi_data <- read.csv("CPI_CANADA.csv")

# Plot the trend of CPI with a legend
ggplot(cpi_data, aes(x = YEAR, y = VALUE, color = "CPI")) + # Add a legend label
  geom_line(size = 1) + # Line chart for CPI trend
  labs(title = "Trend of CPI in Canada (2002-2023)",
       x = "Year",
       y = "Consumer Price Index (CPI)",
       color = "Legend") + # Legend title
  theme_minimal(base_size = 12) +
  theme(plot.title = element_text(hjust = 0.5))
```

User
Write me a R code that displayes the multiple linear regression model is as follows I provided.

ChatGPT

Generated by DALL·E
$$
\begin{aligned}
\text{Share\_of\_total\_income} (Y) &= \beta_0 + \beta_1 \cdot \text{Year} + \beta_2 \cdot \text{Social\_Class} \\
&\quad + \beta_3 \cdot \text{Period} + \beta_4 \cdot (\text{Year} \times \text{Social\_Class}) \\
&\quad + \beta_5 \cdot (\text{Social\_Class} \times \text{Period}) + \varepsilon
\end{aligned}
$$

User
Then write me a R code that displayes the The regression results from the multiple linear regression model I provided.

ChatGPT

Generated by DALL·E
```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(stargazer)

# Load the dataset
income_data <- read.csv("Income_inequality_social_class.csv")

# Define the periods for comparison: Great Recession, COVID-19, and Other
income_data <- income_data %>%
  mutate(
    Period = case_when(
      Year >= 2007 & Year <= 2009 ~ "Great Recession",
      Year >= 2020 & Year <= 2023 ~ "COVID-19",
      TRUE ~ "Other"
    )
  )

# Convert relevant columns to factors
income_data$Social_Class <- factor(income_data$Social_Class, 
                                   levels = c("Bottom 50% income", "Top 10% income", "Top 1% income"))
income_data$Period <- factor(income_data$Period, 
                             levels = c("Great Recession", "COVID-19", "Other"))

# Create binary indicator variables for each period
income_data <- income_data %>%
  mutate(
    Great_Recession = ifelse(Period == "Great Recession", 1, 0),
    COVID_19 = ifelse(Period == "COVID-19", 1, 0),
    Other_Period = ifelse(Period == "Other", 1, 0)  # Include 'Other' for completeness
  )

# Ensure no missing data in key columns
income_data <- income_data %>%
  filter(!is.na(Share_of_total_income) & !is.na(Social_Class) & !is.na(Period))

# Run the regression model with explicit interactions
model <- lm(
  Share_of_total_income ~ Year + Social_Class +
    Great_Recession + COVID_19 + Other_Period +
    Year:Social_Class +
    Social_Class:Great_Recession +
    Social_Class:COVID_19 +
    Social_Class:Other_Period,
  data = income_data
)

# Generate the stargazer table and filter out the citation
# Capture the stargazer output in a variable
stargazer_output <- capture.output(
  stargazer(
    model, type = "text", title = "Regression Results: Income Inequality During Great Recession and COVID-19", 
    dep.var.labels = "Share of Total Income",
    covariate.labels = c("Year", 
                         "Top 1% Income", 
                         "Top 10% Income", 
                         "Bottom 50% Income",
                         "Great Recession", 
                         "COVID-19",
                         "Other Period",
                         "Year x Top 1% Income", 
                         "Year x Top 10% Income", 
                         "Year x Bottom 50% Income",
                         "Top 1% Income x Great Recession", 
                         "Top 10% Income x Great Recession", 
                         "Bottom 50% Income x Great Recession",
                         "Top 1% Income x COVID-19", 
                         "Top 10% Income x COVID-19", 
                         "Bottom 50% Income x COVID-19",
                         "Top 1% Income x Other Period", 
                         "Top 10% Income x Other Period", 
                         "Bottom 50% Income x Other Period"),
    omit.stat = c("f", "ser")
  )
)

# Remove lines containing "Please cite as" or citation messages
filtered_output <- stargazer_output[!grepl("Please cite as:", stargazer_output)]

# Print the filtered output
cat(filtered_output, sep = "\n")

```

User
Write me a r code to perform a posterior predictive check (PPC) for my income inequality regression model. The information is provided in the file. 

ChatGPT

Generated by DALL·E
```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)

# Simulate data (replace this with your actual data and model)
set.seed(123)
data <- data.frame(
  Year = rep(2002:2023, each = 3),
  Social_Class = rep(c("Bottom 50%", "Top 10%", "Top 1%"), times = 22),
  Income_Share_Obs = c(runif(22, 15, 20), runif(22, 30, 35), runif(22, 10, 15))
)

# Fit a simple linear regression model (replace this with your actual model)
model <- lm(Income_Share_Obs ~ Year + Social_Class, data = data)

# Generate posterior predictive samples (for simplicity, simulate predictions here)
# Replace this with Bayesian sampling if applicable
data <- data %>%
  mutate(
    Income_Share_Pred = predict(model, newdata = data) + rnorm(nrow(data), mean = 0, sd = 0.5) # Adding noise
  )

# Posterior Predictive Check: Density Plot
ggplot(data, aes(x = Income_Share_Obs, fill = "Observed")) +
  geom_density(alpha = 0.5, color = NA) +
  geom_density(aes(x = Income_Share_Pred, fill = "Predicted"), alpha = 0.5, color = NA) +
  labs(
    title = "Posterior Predictive Check: Income Share Distribution",
    x = "Income Share (%)",
    y = "Density"
  ) +
  scale_fill_manual(name = "Legend", values = c("Observed" = "blue", "Predicted" = "gray")) +
  theme_minimal()

# Posterior Predictive Check: Time Series Comparison
ggplot(data, aes(x = Year)) +
  geom_line(aes(y = Income_Share_Obs, color = "Observed"), size = 1) +
  geom_line(aes(y = Income_Share_Pred, color = "Predicted"), size = 1, linetype = "dashed") +
  facet_wrap(~ Social_Class, scales = "free_y") +
  labs(
    title = "Posterior Predictive Check: Observed vs Predicted Trends",
    x = "Year",
    y = "Income Share (%)",
    color = "Legend"
  ) +
  scale_color_manual(values = c("Observed" = "blue", "Predicted" = "red")) +
  theme_minimal()

```
